name: Build and push image and deploy to aks

on:
  push:
    branches:
      - 'feature/**'
      - master
  pull_request:
    branches:
      - master

env:
  PUSH_AND_DEPLOY: ${{ github.event_name != 'pull_request' && github.ref_name == 'feature/npmPublish' }}
  CR_REPO: zgw/nl-portal-libraries

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      tagToDeploy: ${{ steps.prep.outputs.DOCKERTAG }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - run: npm install
      #- run: npm test

  publish-npm:
    runs-on: ubuntu-latest
    if: github.ref_name == 'feature/npmPublish'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"

      - name: lerna bootstrap
        run: |
          npm install -g yarn
          npm install -g lerna
          yarn run bootstrap

      - name: build library
        run: yarn run build

      - name: lerna version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: "nl-portal"
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: "nl-portal"
        run: |
          git push --set-upstream origin HEAD
          yarn run release -- --yes
      
      - name: lerna publish
        env:
          NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        run: |
          npm config set "//registry.npmjs.org/:_authToken" "${NPM_ACCESS_TOKEN}"
          npm config set access public
          npm run publish -- --no-verify-access --yes
          npm config delete "//registry.npmjs.org/:_authToken"